name: Build and Push to ECR

on:
  push:
    branches: ["main", "dev"]
    paths:
      - "**"
  pull_request:
    branches: ["main", "dev"]
    paths:
      - "**"

env:
  AWS_REGION: eu-central-1

jobs:
  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Debug Information
        run: |
          echo "GitHub Ref: ${{ github.ref }}"
          echo "GitHub Event Name: ${{ github.event_name }}"
          echo "Working Directory: ${{ github.workspace }}"
          ls -la
          pwd

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set environment variables
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "ENV_TAG=prod" >> $GITHUB_ENV
            echo "ECS_CLUSTER=fastapi-ecs-cluster-prod" >> $GITHUB_ENV
            echo "ECS_SERVICE=fastapi-service-prod" >> $GITHUB_ENV
          else
            echo "ENV_TAG=dev" >> $GITHUB_ENV
            echo "ECS_CLUSTER=fastapi-ecs-cluster-dev" >> $GITHUB_ENV
            echo "ECS_SERVICE=fastapi-service-dev" >> $GITHUB_ENV
          fi

      - name: Remove existing tag if exists
        run: |
          MANIFEST=$(aws ecr batch-get-image --repository-name ${{ vars.ECR_REPOSITORY }} --image-ids imageTag=${{ env.ENV_TAG }} --query 'images[].imageManifest' --output text || true)
          if [ ! -z "$MANIFEST" ]; then
            aws ecr batch-delete-image --repository-name ${{ vars.ECR_REPOSITORY }} --image-ids imageTag=${{ env.ENV_TAG }}
            echo "Removed ${{ env.ENV_TAG }} tag"
          else
            echo "No ${{ env.ENV_TAG }} tag found"
          fi

      - name: Build and push
        uses: docker/build-push-action@v5
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:${{ env.ENV_TAG }}
          provenance: false
          sbom: false

  deploy:
    name: Deploy to ECS
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Set environment variables
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "ECS_CLUSTER=fastapi-ecs-cluster-prod" >> $GITHUB_ENV
            echo "ECS_SERVICE=fastapi-service-prod" >> $GITHUB_ENV
          else
            echo "ECS_CLUSTER=fastapi-ecs-cluster-dev" >> $GITHUB_ENV
            echo "ECS_SERVICE=fastapi-service-dev" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update ECS service
        run: |
          aws ecs update-service \
            --cluster ${{ env.ECS_CLUSTER }} \
            --service ${{ env.ECS_SERVICE }} \
            --force-new-deployment

      - name: Wait for service stability
        run: |
          aws ecs wait services-stable \
            --cluster ${{ env.ECS_CLUSTER }} \
            --services ${{ env.ECS_SERVICE }}
